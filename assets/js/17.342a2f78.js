(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{597:function(s,n,a){"use strict";a.r(n);var t=a(2),c=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"css三大特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css三大特性"}},[s._v("#")]),s._v(" CSS三大特性")]),s._v(" "),a("p",[s._v("继承、 优先级和层叠")]),s._v(" "),a("p",[a("strong",[s._v("继承：")]),s._v(" 即子类元素继承父类的样式;")]),s._v(" "),a("p",[a("strong",[s._v("优先级：")]),s._v(" 是指不同类别样式的权重比较;")]),s._v(" "),a("p",[a("strong",[s._v("层叠：")]),s._v(" 是说当数量相同时，通过层叠(后者覆盖前者)的样式。")]),s._v(" "),a("h2",{attrs:{id:"css选择符分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css选择符分类"}},[s._v("#")]),s._v(" css选择符分类")]),s._v(" "),a("h3",{attrs:{id:"css选择符-css选择器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css选择符-css选择器"}},[s._v("#")]),s._v(" css选择符(css选择器)")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('1.标签选择器(如：body,div,p,ul,li)　　\n\n2.类选择器(如：class="head",class="head_logo")　　\n\n3.ID选择器(如：id="name",id="name_txt")\n\n4.全局选择器(如：*号)　　\n\n5.组合选择器(如：.head.head_logo,注意两选择器用空格键分开)　　\n\n6.后代选择器 (如：#head .nav ul li 从父集到子孙集的选择器)　　\n\n7.群组选择器 div,span,img {color:Red} 即具有相同样式的标签分组显示　　\n\n8.继承选择器(如：divp,注意两选择器用空格键分开)　　\n\n9.伪类选择器(如：就是链接样式,a元素的伪类，4种不同的状态：link、visited、active、hover。)　　\n\n10.字符串匹配的属性选择符(^$*三种，分别对应开始、结尾、包含)　　\n\n11.子选择器 (如：div>p ,带大于号>)　　\n\n12.CSS 相邻兄弟选择器器(如：h1+p,带加号+)\n')])])]),a("h3",{attrs:{id:"css优先级1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css优先级1"}},[s._v("#")]),s._v(" css优先级1")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("当两个规则都作用到了同一个html元素上时，如果定义的属性有冲突，那么应该用谁的值的，CSS有一套优先级的定义：\n1. \t在属性后面使用 !important 会覆盖页面内任何位置定义的元素样式。\n2. 作为style属性写在元素内的样式\n3. id选择器\n4. 类选择器\n5. 标签选择器\n6. 通配符选择器\n7. 浏览器自定义或继承\n\n**总结排序：**\n\n!important > 行内样式>ID选择器 > 类选择器 > 标签 > 通配符 > 继承 >览器默认属性同一级别\n\n同一级别中后写的会覆盖先写的样式上面的级别还是很容易看懂的，但是有时候有些规则是多个级别的组合\n")])])]),a("h3",{attrs:{id:"css优先级2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css优先级2"}},[s._v("#")]),s._v(" CSS优先级2")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v('由四个级别和各级别的出现次数决定的。\n\n**四个级别分别为**：行内选择符、ID选择符、类别选择符、元素选择符。　　\n\n**优先级的算法**：\n\n每个规则对应一个初始"四位数"：0、0、0、0　　\n若是 **行内选择符**，则加1、0、0、0　\n\n若是 **ID选择符**，则加0、1、0、0　　\n\n若是 **类选择符/属性选择符/伪类选择符**，则分别加0、0、1、0　　\n\n若是 **元素选择符/伪元素选择符**，则分别加0、0、0、1　　\n\n**算法**：将每条规则中，选择符对应的数相加后得到的”四位数“，从左到右进行比较，大的优先级越高。\n\n或者这样理解，**CSS选择器及权重**： \nID选择器0，1，0，0。百位贡献\n\n属性选择器0，0，1，0。十位贡献 \n\n伪类选择器0，0，1，0。十位贡献\n\nClass选择器0，0，1，0。十位贡献 \n\n标签选择器0，0，0，1。个位贡献 \n\n伪元素选择器0，0，0，1。个位贡献 \n\n通配符(*)、子选择器（>）、相邻选择器（+）为0000。无贡献 \n\n**继承所得的样式没有权重（比通配符还低）简洁、高效的css**\n\n所谓高效就是让浏览器查找更少的元素标签来确定匹配的style元素。\n')])])]),a("h2",{attrs:{id:"注意"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注意"}},[s._v("#")]),s._v(" 注意")]),s._v(" "),a("ul",[a("li",[s._v("不要再ID选择器前使用标签名")])]),s._v(" "),a("p",[s._v("解释：ID选择是唯一的，加上标签名相当于画蛇添足了，没必要。")]),s._v(" "),a("ul",[a("li",[s._v("不要在类选择器前使用标签名")])]),s._v(" "),a("p",[s._v("解释：如果没有相同的名字出现就是没必要，但是如果存在多个相同名字的类选择器则有必要添加标签名防止混淆如（p.colclass{color：red;} 和 span.colclass{color:red;}")]),s._v(" "),a("ul",[a("li",[s._v("尽量少使用层级关系")])]),s._v(" "),a("p",[s._v("#divclass p.colclass{color:red;}改为.colclass{color:red;}")]),s._v(" "),a("ul",[a("li",[s._v("使用类选择器代替层级关系（如上）")])])])}),[],!1,null,null,null);n.default=c.exports}}]);