(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{596:function(v,t,e){"use strict";e.r(t);var s=e(2),_=Object(s.a)({},(function(){var v=this,t=v.$createElement,e=v._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h2",{attrs:{id:"_1、px"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、px"}},[v._v("#")]),v._v(" 1、px")]),v._v(" "),e("p",[v._v("px其实就是"),e("strong",[v._v("像素")]),v._v("的意思，全称pixel，也就是图像的基本采样单位。"),e("strong",[v._v("对于不同的设备，它的图像基本单位是不同的，比如显示器和打印机")]),v._v("。而我们通常所说的显示器分辨率是指"),e("strong",[v._v("桌面设定的分辨率")]),v._v("，不是显示器的物理分辨率，但是现在我们的桌面分辨率和物理分辨率几乎是"),e("strong",[v._v("一致")]),v._v("的，因为这样显示效果最佳。所以总的来说px就是对应我们显示器的分辨率。这样就会有个问题就是如果"),e("strong",[v._v("使用px的话我们就要根据不同电脑的分辨率来做自适应")]),v._v("，有点麻烦。")]),v._v(" "),e("hr"),v._v(" "),e("h2",{attrs:{id:"_2、em"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、em"}},[v._v("#")]),v._v(" 2、em")]),v._v(" "),e("p",[v._v("em是相对长度单位。"),e("strong",[v._v("相对于当前对象内本文的字体尺寸")])]),v._v(" "),e("ul",[e("li",[v._v("em的值并不是固定的")]),v._v(" "),e("li",[v._v("em会继承父级元素的字体大小")]),v._v(" "),e("li",[v._v("相对于当前对象内本文的字体尺寸，如果没有设置本文尺寸，那就是相对于浏览器默认的字体尺寸，也就是16px")])]),v._v(" "),e("p",[v._v("这样计算的话。如果没有设置字体尺寸就是1em = 16px。如果使用em的话，有个好的建议，就是"),e("strong",[v._v("将body的font-size设置成62.5%")]),v._v("，也就是16px * 62.5% = 10px。这样的话1em = 10px，方便我们计算。")]),v._v(" "),e("p",[v._v("即：")]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("html,body {font-size: 62.5%;}\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[e("strong",[v._v("注意：")])]),v._v(" "),e("p",[v._v("浏览器可以识别的最小字体也是有偏差的。\n如，"),e("strong",[v._v("谷歌可以识别的最小字体大小是12px，小于12px，依然按照12px显示")]),v._v("。其他浏览器虽然会好点，但是尽量控制最小的字体在12px。"),e("strong",[v._v("再小的可以通过字体缩放实现，或图片等方式。")]),v._v("\n考虑浏览器兼容性，可以每次设置字体大小加上line-height，给个固定值，或百分比，控制盒子高度的一致性。")]),v._v(" "),e("p",[e("strong",[v._v("由此得出结论")])]),v._v(" "),e("ul",[e("li",[v._v("我们可以通过设置一个父级元素如html、body")]),v._v(" "),e("li",[v._v("font-size,作为整体默认尺寸，通过运行js脚本动态修改font-size实现适配")]),v._v(" "),e("li",[v._v("其适配方案依旧是依据像素点来适配")]),v._v(" "),e("li",[v._v("需要通过注入脚本实现")])]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("document.body.style.fontSize='20px';\n\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br")])]),e("ul",[e("li",[v._v("所有子元素的宽度、高度、font-size等尺寸，均继承与父元素，故增加了我们的计算成本")])]),v._v(" "),e("hr"),v._v(" "),e("h2",{attrs:{id:"_3、rem-root-em"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、rem-root-em"}},[v._v("#")]),v._v(" 3、rem（root em）")]),v._v(" "),e("p",[v._v("rem和em一样也是相对长度单位，但是不一样的是rem始终都是相对html根元素。这样有个很大的有点就是使用rem后不会受到对象内文本字体尺寸的影响，而且只需要改变根元素就能改变所有的字体大小。兼容性也是不错的，IE8以上版本和其他浏览器都已经支持，是个做响应式页面的好选择")]),v._v(" "),e("ul",[e("li",[v._v("只相对于根元素（html）")]),v._v(" "),e("li",[v._v("通过修改根元素可成比例的调整页面字体大小")]),v._v(" "),e("li",[v._v("其适配方案通过js脚本设置像素点来实现")])]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("document.documentElement.style.fontSize='20px'\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("h2",{attrs:{id:"总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[v._v("#")]),v._v(" 总结：")]),v._v(" "),e("ul",[e("li",[v._v("用rem，不用em，尺寸清晰，易于维护")]),v._v(" "),e("li",[v._v("由于rem是root em，故其与em兼容性是一致的")]),v._v(" "),e("li",[v._v("均是基于像素点适配")])]),v._v(" "),e("hr"),v._v(" "),e("h2",{attrs:{id:"重点-vw和vh视口-viewport-units-单位"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重点-vw和vh视口-viewport-units-单位"}},[v._v("#")]),v._v(" 重点：vw和vh视口（viewport units）单位")]),v._v(" "),e("p",[v._v("vw（Viewport Width）、vh(Viewport Height)是基于视图窗口的单位，是css3的一部分，基于视图窗口的单位，除了vw、vh还有vmin、vmax。所谓"),e("strong",[v._v("视口，就是根据你浏览器窗口的大小的单位，不受显示器分辨率的影响")]),v._v("，是不是很神奇，这就代表了，我们不需要顾虑到现在那么多不同电脑有关分辨率的自适应问题。")]),v._v(" "),e("p",[e("strong",[v._v("vw是可视窗口的宽度单位，和百分比有点一样，1vw = 可视窗口的宽度的百分之一")]),v._v("。比如窗口宽度大小是1800px，那么1vw = 18px。"),e("strong",[v._v("和百分比不一样的是，vw始终相对于可视窗口的宽度，而百分比和其父元素的宽度有关")]),v._v("。")]),v._v(" "),e("p",[e("strong",[v._v("vh就是可视窗口的高度")]),v._v("了。")]),v._v(" "),e("p",[v._v("这边顺便提一下vmin和vmax，vmin是指选择vw和vh中最小的那个，而vmax是选择最大的那个")]),v._v(" "),e("ul",[e("li",[v._v("vw:1vw 等于视口宽度的1%")]),v._v(" "),e("li",[v._v("Vh:1vh 等于视口高度的1%")]),v._v(" "),e("li",[v._v("vmin: 选取 vw 和 vh 中最小的那个,即在手机竖屏时，1vmin=1vw")]),v._v(" "),e("li",[v._v("vmax:选取 vw 和 vh 中最大的那个 ,即在手机竖屏时，1vmax=1vh")])]),v._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[v._v("Note: IE9 uses vm instead of vmin. It does not support vmax.\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br")])]),e("p",[e("strong",[v._v("兼容性方面是vw和vh的短板了")]),v._v("，使用vw和vh所需求的版本还是较高的")]),v._v(" "),e("p",[v._v("由于使用vw、vh依赖于视图窗口，故当屏幕分辨率变大或者缩小，尺寸会进行相应的放大或者缩小，当页面足够大，或者足够小时，尺寸会变得很大或者很小，从而导致用户体验差，当然谁会用那么大或者那么小的设备呢？大多数情况下，其实可以忽略不计的，如果你是一个最求完美用户体验的人，可通过rem，对根元素设置最大最小值，配合body加上最大宽度和最小宽度")]),v._v(" "),e("p",[v._v("参考：")]),v._v(" "),e("p",[v._v("https://zhuanlan.zhihu.com/p/96721026")]),v._v(" "),e("p",[v._v("https://zhuanlan.zhihu.com/p/36913200")])])}),[],!1,null,null,null);t.default=_.exports}}]);