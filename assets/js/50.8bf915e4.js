(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{623:function(s,e,n){"use strict";n.r(e);var a=n(2),t=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"一、在app-vue-中-通过provide来提供变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一、在app-vue-中-通过provide来提供变量"}},[s._v("#")]),s._v(" 一、在App.vue 中，通过provide来提供变量")]),s._v(" "),n("p",[s._v("vue 刷新页面，父组件中通过provide来提供变量，在子组件中通过inject来注入变量。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<template>\n  <div id="app">\n    <router-view v-if="isRouterAlive"></router-view>\n  </div>\n</template>\n<script>\nexport default {\n  name: "App",\n  provide() {  // 1. 通过provide提供变量，注意要写成方法格式。this.reload是定义在methods中的reload方法\n    return { reload: this.reload };\n  },\n  data() {\n    return {\n      isRouterAlive: true  // 2. 定义变量 ，控制 router-view ，达到刷新效果\n    };\n  },\n  methods: {\n    reload() {  // 3. 控制 router-view， 达到刷新效果\n      this.isRouterAlive = false;\n      this.$nextTick(function() {\n        this.isRouterAlive = true;\n      });\n    }\n  }\n};\n<\/script>\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h2",{attrs:{id:"二、在test-vue组件-中-通过inject来注入变量-并使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二、在test-vue组件-中-通过inject来注入变量-并使用"}},[s._v("#")]),s._v(" 二、在test.vue组件 中，通过inject来注入变量，并使用")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<template>\n  <div class="test">\n    <h2 >数据显示</h2>\n    <el-button @click="handleReload">点击刷新</el-button>\n  </div>\n</template>\n<script>\n  export default {\n    inject:[\'reload\'], // 注入reload变量\n    methods:{\n      handleReload(){\n        this.reload(); //在这里可直接调用 ，一般用在新增一条数据，或者删除了一条数据，需要刷新当前页面的时候\n      }\n    }\n  }\n<\/script>\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h2",{attrs:{id:"三、-用他们的原因"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三、-用他们的原因"}},[s._v("#")]),s._v(" 三、 用他们的原因")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("使用 window.reload()、router.go(0)刷新时，整个页面都会重新加载，用户体验不好。")])]),s._v(" "),n("li",[n("p",[s._v("this.$router.push(this.$route.path); 用 vue-router 重新跳转到当前路由，页面数据不刷新。（如调后台给表格中新增了一条数据，成功，但在此时页面的表格中是没有这条数据的")])]),s._v(" "),n("li",[n("p",[s._v("使用场景： 如新增、删除数据等操作，调完后台需要对页面进行刷新，保证数据正确显示。")])]),s._v(" "),n("li")]),s._v(" "),n("h2",{attrs:{id:"四、概念解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四、概念解析"}},[s._v("#")]),s._v(" 四、概念解析")]),s._v(" "),n("p",[s._v("成对出现：provide和inject是成对出现的")]),s._v(" "),n("p",[s._v("作用：用于父组件向子孙组件传递数据")]),s._v(" "),n("p",[s._v("使用方法：provide在父组件中返回要传给下级的数据，inject在需要使用这个数据的子辈组件或者孙辈等下级组件中注入数据。")]),s._v(" "),n("p",[s._v("使用场景：由于vue有$parent属性可以让子组件访问父组件。但孙组件想要访问祖先组件就比较困难。通过provide/inject可以轻松实现跨级访问父组件的数据")]),s._v(" "),n("p",[s._v("另外一种理解：provider/inject：简单的来说就是在父组件中通过provider来提供变量，然后在子组件中通过inject来注入变量；需要注意的是这里不论子组件有多深，只要调用了inject那么就可以注入provider中的数据。而不是局限于只能从当前父组件的prop属性来获取数据。")])])}),[],!1,null,null,null);e.default=t.exports}}]);